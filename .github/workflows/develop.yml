on:
  push:
    branches:
      - "develop"
name: Preprod deployment
jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
    steps:
    - uses: actions/checkout@v2
    - name: Get app version
      id: get_version
      run: |
        echo ::set-output name=VERSION::$(cat Makefile | grep $'^TAG\t\+:= ' | sed 's/TAG\t\+:= //')

  build-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: TAG=${{ needs.get-version.outputs.version }} docker-compose -f docker-compose-prod.yml build
    - name: Login to GHCR
      if: success()
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Push on GHCR
      run: |
        ./cd/scripts/docker-push.sh v${{ needs.get-version.outputs.version }} v${{ needs.get-version.outputs.version }}
        ./cd/scripts/docker-push.sh v${{ needs.get-version.outputs.version }} develop
    - name: Delete untagged images
      uses: vlaurin/action-ghcr-prune@main
      with:
        token: ${{ secrets.PERSO_ACCESS_TOKEN }}
        organization: datalab-mi
        container: basegun/basegun-backend
        dry-run: false
        untagged: true
    - name: Delete untagged images
      uses: vlaurin/action-ghcr-prune@main
      with:
        token: ${{ secrets.PERSO_ACCESS_TOKEN }}
        organization: datalab-mi
        container: basegun/basegun-frontend
        dry-run: false
        untagged: true

  deploy-preprod:
    uses: ./.github/workflows/deploy.yml
    needs: [get-version, build-push]
    with:
      image_version: v${{ needs.get-version.outputs.version }}
      branch: "develop"
      volume_size: 10
      flavor: "s1-2"
      workspace: "preprod"
    secrets:
      SERVER_IP: ${{ secrets.PREPROD_SERVER_IP }}
      OS_PASSWORD: ${{ secrets.OS_PASSWORD }}
      OS_PROJECT_ID: ${{ secrets.OS_PROJECT_ID }}
      OS_PROJECT_NAME: ${{ secrets.OS_PROJECT_NAME }}
      OS_USERNAME: ${{ secrets.OS_USERNAME }}

  test:
    runs-on: ubuntu-latest
    needs: deploy-preprod
    steps:
      - name: Test ip
        run : |
          ./cd/scripts/test-alive.sh ${{ secrets.PREPROD_SERVER_IP }}
      - name: Test DNS
        if: success()
        run : |
          ./cd/scripts/test-alive.sh preprod.basegun.fr